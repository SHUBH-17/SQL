Problem:
You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N.
Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:
Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.

--------------------------------------------------------------------------------------------------
Approach 1
select N,
       CASE
            when P is null then 'Root'
            when N  in (select distinct P from BST where P is not null) then 'Inner'
            else 'Leaf'
       END 
from BST
order by N;

--------------------------------------------------------------------------------------------------
Approach 2
select N,
       case when P is null then 'Root'
            when (select count(*) from BST where P = B.N) > 0 then  
            'Inner'
            else 'Leaf'
       end
from BST as B 
order by N
;
